{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c4a5136.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// Preparing the data layer\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\n// Hook which allows us to pull information from the data layer\r\nexport const useStateValue = () => useContext(StateContext);","export const initialState = {\r\n    term: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case actionTypes.SET_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                term: action.term,\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React, { useState } from 'react';\r\nimport './Search.css';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Search({ hideButtons = false }) {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const history = useHistory();\r\n    \r\n    const search = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log('You hit the search button >> ', input)\r\n\r\n        dispatch({\r\n            type: actionTypes.SET_SEARCH_TERM,\r\n            term: input\r\n        })\r\n\r\n        history.push('/search')\r\n    };\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"search__input\">\r\n                <SearchIcon className=\"search__inputIcon\" />\r\n                <input value={input} onChange={e => setInput(e.target.value)} />\r\n                <MicIcon />\r\n            </div>\r\n\r\n            {!hideButtons ? (\r\n                <div className=\"search__buttons\">\r\n                <Button type='submit' onClick={search} variant=\"outlined\">Google Search</Button>\r\n                <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n                </div>\r\n            ): (\r\n                <div className=\"search__buttons\">\r\n                <Button className=\"search__buttonsHidden\" type='submit' onClick={search} variant=\"outlined\">Google Search</Button>\r\n                <Button className=\"search__buttonsHidden\" variant=\"outlined\">I'm Feeling Lucky</Button>\r\n                </div>\r\n            )}\r\n\r\n            \r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Search from './Search';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home__header\">\r\n                <div className=\"home__headerLeft\">\r\n                    <Link to=\"/about\">About</Link>\r\n                    <Link to=\"/store\">Store</Link>\r\n                </div>\r\n                <div className=\"home__headerRight\">\r\n                    <Link to=\"/gmail\">Gmail</Link>\r\n                    <Link to=\"/images\">Images</Link>\r\n                    <AppsIcon />\r\n                    <Avatar />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"home__body\">\r\n                <img src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\" alt=\"\" />\r\n\r\n                <div className=\"home__inputContainer\">\r\n                    <Search />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home\r\n","import { useState, useEffect } from 'react'\r\nimport API_KEY from \"./keys\";\r\n\r\nconst CONTEXT_KEY = \"a063988eaff33e006\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            )\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        }\r\n\r\n        fetchData()\r\n    }, [term])\r\n\r\n    return { data }\r\n};\r\n\r\nexport default useGoogleSearch\r\n","export const API_KEY = \"AIzaSyAZUpgxUN2RLTtVfNlBA5MSG6wDb5c_R1E\"\r\n\r\nexport default API_KEY;","import React from 'react'\r\nimport './SearchPage.css'\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport useGoogleSearch from './useGoogleSearch';\r\nimport Response from \"./response\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nfunction SearchPage() {\r\n    const [{ term }, dispatch] = useStateValue();\r\n    \r\n    // LIVE API CALL\r\n    const { data } = useGoogleSearch(term);\r\n\r\n    // Mock API CALL\r\n    // const data = Response;\r\n\r\n    // // https://developers.google.com/custom-search/v1/using_rest\r\n    // https://cse.google.com/cse/create/new\r\n\r\n    console.log(data)\r\n    return (\r\n        <div className='searchPage'>\r\n            <div className='searchPage__header'>\r\n                <Link to=\"/\">\r\n                    <img className=\"searchPage__logo\" src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\" />\r\n                </Link>\r\n\r\n                <div className=\"searchPage__headerBody\">\r\n                    <Search hideButtons />\r\n            \r\n                    <div className=\"searchPage__options\">\r\n                        <div className=\"searchPage__optionsLeft\">\r\n                            <div className=\"searchPage__option\">\r\n                                <SearchIcon />\r\n                                <Link to=\"/all\">All</Link>\r\n                            </div>\r\n                            \r\n                            <div className=\"searchPage__option\">\r\n                                <DescriptionIcon />\r\n                                <Link to=\"/news\">News</Link>\r\n                            </div>\r\n\r\n                            <div className=\"searchPage__option\">\r\n                                <ImageIcon />\r\n                                <Link to=\"/images\">Images</Link>\r\n                            </div>\r\n\r\n                            <div className=\"searchPage__option\">\r\n                                <LocalOfferIcon />\r\n                                <Link to=\"/shopping\">shopping</Link>\r\n                            </div>\r\n\r\n                            <div className=\"searchPage__option\">\r\n                                <RoomIcon />\r\n                                <Link to=\"/maps\">maps</Link>\r\n                            </div>\r\n\r\n                            <div className=\"searchPage__option\">\r\n                                <MoreVertIcon />\r\n                                <Link to=\"/more\">more</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"searchPage__optionsRight\">\r\n                            <div className=\"searchPage__option\">\r\n                                <Link to=\"/settings\">Settings</Link>\r\n                            </div>\r\n\r\n                            <div className=\"searchPage__option\">\r\n                                <Link to=\"/tools\">Tools</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>    \r\n\r\n            {term && (\r\n                <div className=\"searchPage__results\">\r\n                    <p className=\"searchPage__resulCount\">\r\n                        About {data?.searchInformation.formattedTotalResults} results ({data?.searchInformation.formattedSearchTime} seconds) for {term}\r\n                    </p>\r\n\r\n                    {data?.items.map(item => (\r\n                        <div className='searchPage__result'>\r\n                            <a className=\"searchPage__resultLink\" href={item.link}>\r\n                                {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src && (\r\n                                    <img className=\"searchPage__resultImage\" src={item.pagemap?.cse_image[0]?.src} alt=\"\" />\r\n                                )}\r\n                                {item.displayLink} ▽\r\n                            </a>\r\n                            <a className=\"searchPage__resultTitle\" href={item.link}>\r\n                                <h2>{item.title}</h2>\r\n                            </a>\r\n                            <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport SearchPage from './SearchPage';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n    return (\n        // BEM\n        <div className=\"app\">\n            <Router>\n                <Switch>\n                    <Route path=\"/search\">\n                        <SearchPage />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer} >\n        <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}